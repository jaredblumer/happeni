<%= form_with model: event, local: true, class: "w-full max-w-lg mx-auto bg-white border-2 border-gray-200 p-8 rounded-lg shadow-lg" do |form| %>
  
  <% if event.errors.any? %>
    <div id="error_explanation" class="mb-4 p-4 bg-red-100 border border-red-400 text-red-700 rounded">
      <h2 class="font-semibold mb-1"><%= pluralize(event.errors.count, "error") %> prohibited this event from being saved:</h2>
      <ul class="list-disc pl-5">
        <% event.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="mb-4">
    <%= form.label :name, "Event Name", class: "block text-gray-700 font-semibold mb-1" %>
    <%= form.text_field :name, required: true, class: "w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" %>
  </div>

  <div class="mb-4">
    <%= form.label :start_date, "Date", class: "block text-gray-700 font-semibold mb-1" %>
    <%= form.date_select :start_date, order: [:month, :day, :year], start_year: Date.today.year, end_year: Date.today.year + 10, required: true, class: "w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" %>
  </div>

  <div id="time_fields" class="grid grid-cols-2 gap-4">
    <div class="mb-4">
      <%= form.label :start_time, "Start Time", class: "block text-gray-700 font-semibold mb-1" %>
      <%= form.time_select :start_time, ampm: true, minute_step: 15, required: true, class: "w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" %>
    </div>

    <div class="mb-4">
      <%= form.label :end_time, "End Time", class: "block text-gray-700 font-semibold mb-1" %>
      <%= form.time_select :end_time, ampm: true, minute_step: 15, required: true, class: "w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" %>
    </div>
  </div>

  <div class="mb-4">
    <%= form.label :all_day, "All Day", class: "block text-gray-700 font-semibold mb-1" %>
    <%= form.check_box :all_day, id: "all_day_checkbox", class: "form-checkbox text-indigo-600" %>
  </div>

  <div class="mb-4 w-full">
    <%= form.label :recurrence_type, "Recurring Event", class: "block text-gray-700 font-semibold mb-1" %>
    <%= form.select :recurrence_type, 
    options_for_select(['Does Not Repeat', 'Daily', 'Weekly', 'Monthly', 'Yearly', 'Custom'], @event.recurrence_type), 
    {},
    class: "w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" %>
  </div>

  <div id="custom_recurring_fields" style="display:none">
    <div class="mb-4">
      <%= form.label :custom_recurring_fields, "Repeat Every", class: "block text-gray-700 font-semibold mb-1" %>
      <div class="flex items-center space-x-2">
        <%= form.number_field :custom_recurrence_frequency, in: 1..100, value: @event.custom_recurrence_frequency, id: 'recurrence_frequency', class: "border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" %>
        <%= form.select :custom_recurrence_unit,
        options_for_select(['Day(s)', 'Week(s)', 'Month(s)', 'Year(s)'], @event.custom_recurrence_frequency),
        {},
        class: "border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" %>
      </div>
    </div>

    <div class="mb-4">
      <%= form.label :ends, "Ends", class: "block text-gray-700 font-semibold mb-1" %>
      <div class="flex items-center space-x-2">
        <%= form.select :ends_recurrence_unit,
        options_for_select(['Never', 'On date...', 'After...'], @event.ends_recurrence_unit), 
        {},
        id: "ends_recurrence_unit",
        class: "w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" %>
      </div>
    </div>

    <div id="ends_recurrence_date" class="mb-4" style="display:none">
      <%= form.label :ends_recurrence_date, "Ends On", class: "block text-gray-700 font-semibold mb-1" %>
      <%= form.date_select :ends_recurrence_date, order: [:month, :day, :year], start_year: Date.today.year, end_year: Date.today.year + 10, required: true, class: "w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" %>
    </div>
  </div>

  <div id="number_of_occurrences" class="mb-4" style="display:none">
    <%= form.label :number_of_occurrences, "Ends After...", class: "block text-gray-700 font-semibold mb-1" %>
    <%= form.number_field :number_of_occurrences, in: 1..100, value: @event.number_of_occurrences, id: 'number_of_occurrences', class: "border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" %> occurrence(s)
  </div>

  <div class="mt-6">
    <%= form.submit event.new_record? ? 'Create Event' : 'Update Event', class: "w-full bg-indigo-500 hover:bg-indigo-600 text-white font-bold py-2 px-4 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" %>
  </div>

<% end %>

<script>
  function handleAllDayToggle() {
    const allDayCheckbox = document.getElementById("all_day_checkbox");
    const timeFields = document.getElementById("time_fields");

    if (allDayCheckbox && timeFields) {
      function toggleTimeFields() {
        if (allDayCheckbox.checked) {
          timeFields.style.display = "none";
        } else {
          timeFields.style.display = "grid";
        }
      }

      toggleTimeFields();

      allDayCheckbox.addEventListener("change", toggleTimeFields);
    }
  }

  function handleRecurringCustom() {
    const recurringEventSelect = document.getElementById("event_recurrence_type");
    const recurringCustomFields = document.getElementById("custom_recurring_fields");

    if (recurringEventSelect && recurringCustomFields) {
      function toggleRecurringCustomFields() {
        if (recurringEventSelect.value === "Custom") {
          recurringCustomFields.style.display = "grid";
        } else {
          recurringCustomFields.style.display = "none";
        }
      }

      toggleRecurringCustomFields();

      recurringEventSelect.addEventListener("change", toggleRecurringCustomFields);
    }
  }

  function handleEnds() {
    const endsRecurrenceUnitSelect = document.getElementById("ends_recurrence_unit");
    const recurringEndDate = document.getElementById("ends_recurrence_date");
    const numberOfOccurrences = document.getElementById("number_of_occurrences");

    if (endsRecurrenceUnitSelect && recurringEndDate && numberOfOccurrences) {
      function toggleRecurringEndDate() {
        if (endsRecurrenceUnitSelect.value === "On date...") {
          recurringEndDate.style.display = "block";
          numberOfOccurrences.style.display = "none";
        } else if (endsRecurrenceUnitSelect.value === "After...") {
          recurringEndDate.style.display = "none";
          numberOfOccurrences.style.display = "block";
        } else {
          recurringEndDate.style.display = "none";
          numberOfOccurrences.style.display = "none";
        }
      }

      toggleRecurringEndDate();

      endsRecurrenceUnitSelect.addEventListener("change", toggleRecurringEndDate);
    }
  }

  document.addEventListener("turbo:load", () => {
    handleAllDayToggle();
    handleRecurringCustom();
    handleEnds();
  });

  document.addEventListener("turbo:load", () => {
    const dateSelects = document.querySelectorAll("select[id^='event_start_date']");
    const timeSelects = document.querySelectorAll("select[id^='event_start_time'], select[id^='event_end_time']");
    const recurringEndDateSelects = document.querySelectorAll("select[id^='event_ends_recurrence_date']");
    const allSelects = [...dateSelects, ...timeSelects, ...recurringEndDateSelects];

    allSelects.forEach(select => {
      select.classList.add("p-20", "border", "border-gray-300", "rounded-lg", "focus:ring-2", "focus:ring-indigo-500");
    });
  });
</script>
